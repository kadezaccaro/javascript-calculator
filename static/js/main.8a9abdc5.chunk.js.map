{"version":3,"sources":["components/Calculator.jsx","App.js","index.js"],"names":["Calculator","props","state","equation","evaluated","decimalClicker","result","storeEquation","handleOperators","bind","handleEvaluate","clearDisplay","handleDecimal","handleNumbers","e","this","innerText","target","lastTwoChars","slice","length","setState","test","operatorStore","lastChar","replace","includes","substring","answer","parse","str","Function","id","className","onClick","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a9abdc5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      equation: \"0\",\r\n      evaluated: false,\r\n      decimalClicker: false,\r\n      result: \"\",\r\n      storeEquation: \"\",\r\n    };\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.clearDisplay = this.clearDisplay.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this);\r\n  }\r\n\r\n  handleNumbers(e) {\r\n    const { equation, evaluated } = this.state;\r\n    const { innerText } = e.target;\r\n    let maxCharLimit = 20;\r\n    let zeroAfterOperatorRegEx = /(\\+0|-0|\\/0|\\*0)$/g;\r\n    let lastTwoChars = equation.slice(-2);\r\n\r\n    if (equation.length < maxCharLimit) {\r\n      if (equation === \"0\") {\r\n        // Don't let initial number begin with multiple zeros\r\n        this.setState({\r\n          equation: innerText,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          equation: equation + innerText,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (zeroAfterOperatorRegEx.test(lastTwoChars)) {\r\n      if (innerText === \"0\") {\r\n        // Don't let number after operator begin with multiple zeros\r\n        this.setState({\r\n          equation: equation,\r\n        });\r\n      } else if (innerText !== \"0\") {\r\n        // Replace 0 with next number above 0\r\n        this.setState({\r\n          equation: equation.slice(0, -1) + innerText,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (evaluated) {\r\n      // Prevents unnecessary input after the equation is evaluated\r\n      this.setState({\r\n        equation: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(e) {\r\n    const { equation, evaluated, result } = this.state;\r\n    const { innerText } = e.target;\r\n    const operatorStore = [\"+\", \"-\", \"/\", \"*\"];\r\n    let lastChar = equation.slice(-1);\r\n    let operatorComboRegEx = /(--|\\*-|\\/-|\\+-|-)$/g;\r\n\r\n    if (lastChar === \"-\") {\r\n      // Fixes \"5 * - + 5\" issue by replacing regex with new operator\r\n      return this.setState({\r\n        equation: equation.replace(operatorComboRegEx, innerText),\r\n      });\r\n    }\r\n\r\n    if (innerText !== \"-\") {\r\n      if (\r\n        // Prevent operators from being added consecutively\r\n        (operatorStore.includes(innerText) && equation === \"0\") ||\r\n        (operatorStore.includes(innerText) && operatorStore.includes(lastChar))\r\n      ) {\r\n        return this.setState({\r\n          equation: equation.replace(lastChar, innerText),\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      equation: equation + innerText,\r\n      decimalClicker: false,\r\n    });\r\n\r\n    if (evaluated) {\r\n      this.setState({\r\n        equation: result + innerText,\r\n        evaluated: false,\r\n        storeEquation: \"\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleDecimal(e) {\r\n    const { equation, decimalClicker } = this.state;\r\n    const { innerText } = e.target;\r\n\r\n    if (decimalClicker === false) {\r\n      // Only 1 decimal can be added per number\r\n      this.setState({ equation: equation + innerText, decimalClicker: true });\r\n    }\r\n  }\r\n\r\n  handleEvaluate() {\r\n    const { equation } = this.state;\r\n    const operatorStore = [\"+\", \"-\", \"/\", \"*\"];\r\n\r\n    if (equation) {\r\n      if (operatorStore.includes(equation.slice(-1))) {\r\n        // If equation ENDS with an operator, remove it\r\n        this.setState({\r\n          equation: equation.slice(0, -1),\r\n        });\r\n      } else if (operatorStore.includes(equation[0])) {\r\n        // If equation STARTS with an operator, remove it\r\n        this.setState({\r\n          equation: equation.substring(1),\r\n        });\r\n      } else {\r\n        let answer = this.parse(equation);\r\n        this.setState({\r\n          storeEquation: equation + \" = \",\r\n          equation: \"\",\r\n          result: answer,\r\n          evaluated: true,\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  parse(str) {\r\n    // Avoid using eval()\r\n    return Function(`'use strict'; return (${str})`)();\r\n  }\r\n\r\n  clearDisplay() {\r\n    this.setState({\r\n      equation: \"0\",\r\n      evaluated: false,\r\n      decimalClicker: false,\r\n      result: \"\",\r\n      storeEquation: \"\",\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main id=\"calculator\">\r\n          {/* \r\n          Tool that displays state as a string (useful for debugging)\r\n          <p\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              color: \"white\",\r\n              fontSize: 30,\r\n            }}\r\n          >\r\n            {JSON.stringify(this.state, null, 2)}\r\n          </p> \r\n          */}\r\n\r\n          <div className=\"grid-container\">\r\n            <div id=\"store-equation\">\r\n              {/* Makes the tests pass by being outside of the display element */}\r\n              {this.state.storeEquation}\r\n            </div>\r\n\r\n            <div id=\"display\">\r\n              <div id=\"equation-display\">{this.state.equation}</div>\r\n              <div id=\"result-display\">{this.state.result}</div>\r\n            </div>\r\n\r\n            <button id=\"clear\" onClick={this.clearDisplay}>\r\n              C\r\n            </button>\r\n\r\n            <button id=\"divide\" onClick={this.handleOperators}>\r\n              /\r\n            </button>\r\n            <button id=\"multiply\" onClick={this.handleOperators}>\r\n              *\r\n            </button>\r\n\r\n            <button\r\n              id=\"seven\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              7\r\n            </button>\r\n            <button\r\n              id=\"eight\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              8\r\n            </button>\r\n            <button\r\n              id=\"nine\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              9\r\n            </button>\r\n\r\n            <button id=\"subtract\" onClick={this.handleOperators}>\r\n              -\r\n            </button>\r\n\r\n            <button\r\n              id=\"four\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              4\r\n            </button>\r\n            <button\r\n              id=\"five\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              5\r\n            </button>\r\n            <button id=\"six\" className=\"light-btn\" onClick={this.handleNumbers}>\r\n              6\r\n            </button>\r\n\r\n            <button id=\"add\" onClick={this.handleOperators}>\r\n              +\r\n            </button>\r\n\r\n            <button id=\"one\" className=\"light-btn\" onClick={this.handleNumbers}>\r\n              1\r\n            </button>\r\n            <button id=\"two\" className=\"light-btn\" onClick={this.handleNumbers}>\r\n              2\r\n            </button>\r\n            <button\r\n              id=\"three\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              3\r\n            </button>\r\n            <button\r\n              id=\"zero\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleNumbers}\r\n            >\r\n              0\r\n            </button>\r\n            <button\r\n              id=\"decimal\"\r\n              className=\"light-btn\"\r\n              onClick={this.handleDecimal}\r\n            >\r\n              .\r\n            </button>\r\n\r\n            <button id=\"equals\" onClick={this.handleEvaluate}>\r\n              =\r\n            </button>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}